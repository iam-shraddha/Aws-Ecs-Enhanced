name: Deploy to ECS

on:
  push:
    branches: [main]
    paths:
      - '**.js'
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'
      - 'package.json'
      - 'client/**'
      - 'terraform/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      ECR_REPOSITORY: node-app-v2
      ECS_CLUSTER: node-app-v2
      ECS_SERVICE: node-app-v2

    steps:

    # Pulls your app code.
      - name: 📦 Checkout Code
        uses: actions/checkout@v3
  
   # Uses AWS credentials from GitHub Secrets to authenticate.
      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

   # Authenticates Docker to push to your ECR repository.
      - name: 🐳 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🔧 Get ECR Repo URI
        id: ecr
        run: |
          echo "REPO_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --query 'repositories[0].repositoryUri' --output text --region $AWS_REGION)" >> $GITHUB_ENV
 
  # Builds Docker image and tags it with ECR URI.
      - name: 🏗️ Build and Tag Docker Image
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $REPO_URI:latest

 # Uploads your image to ECR.
      - name: 🚀 Push Docker Image to ECR
        run: |
          docker push $REPO_URI:latest

 # Forces ECS to pull latest image and restart task.
      - name: 🔁 Update ECS Service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION
  # Initialize Terraform with Remote Backend
      - name: 📥 Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: 📂 Terraform Init (with remote backend)
        run: terraform init
        working-directory: terraform  
  
  # Get URL to access application
      - name: 🌐 Get HTTPS App URL
        run: terraform output -raw app_domain_url
        working-directory: terraform
