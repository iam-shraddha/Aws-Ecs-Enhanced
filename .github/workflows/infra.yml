name: Terraform Infrastructure

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/infra.yml'

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    env:
      TF_IN_AUTOMATION: true
      
    steps:
    # Pulls your repo to GitHub runner.
      - name: üßæ Checkout Code
        uses: actions/checkout@v3
   
    # Installs Terraform on the GitHub Actions runner.
      - name: ‚öôÔ∏è Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0
   
   # Authenticates to your AWS account using secrets
      - name: üîÅ Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

   # Provisions your infrastructure
      - name: ‚úÖ Terraform Validate
        run: terraform validate

      - name: üìê Terraform Plan
        run: |
          terraform plan -out=tfplan \
            -var="stripe_publishable_key=${{ secrets.PUBLISHABLE_KEY }}" \
            -var="stripe_secret_key=${{ secrets.SECRET_KEY }}"
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üöÄ Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   
      - name: üåç Show Load Balancer DNS
        run: terraform output alb_dns_name
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
